version: 2.1

orbs:
  go: circleci/go@1.7.3
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  check-mock-gen:
    machine:
      image: ubuntu-2204:2024.01.1
    steps:
      - checkout
      - go/install:
          version: "1.21.4"
      - go/load-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
      - go/mod-download
      - go/save-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          path: "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Run make mock-gen
          command: |
            make mock-gen
      - run:
          name: Check for uncommitted changes
          command: |
            if ! git diff --exit-code; then
              echo "Uncommitted changes detected. Please run 'make mock-gen' before committing."
              exit 1
            fi

  build_lint_test:
    machine:
      image: ubuntu-2204:2024.01.1
    resource_class: large
    steps:
      - go/install:
          version: "1.21.4"
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - go/load-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
      - add_ssh_keys
      - go/mod-download
      - go/save-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          path: "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Build cli app
          command: make build
      - run:
          name: Lint
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.55.2
            ./bin/golangci-lint run --timeout 5m0s
      - run:
          name: Run tests
          command: |
            make test

  test_e2e_babylon:
    machine:
      image: ubuntu-2204:2024.01.1
    resource_class: large
    steps:
      - go/install:
          version: "1.21.4"
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - go/load-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
      - add_ssh_keys
      - go/mod-download
      - go/save-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          path: "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Download OP e2e devnet test data
          command: |
            make op-e2e-devnet
      - run:
          name: Run integration tests
          command: |
            make test-e2e-babylon

  test_e2e_bcd:
    machine:
      image: ubuntu-2204:2024.01.1
    resource_class: large
    steps:
      - go/install:
          version: "1.21.4"
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - go/load-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
      - add_ssh_keys
      - go/mod-download
      - go/save-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          path: "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Run integration tests
          command: |
            make test-e2e-bcd

  test_e2e_wasmd:
    machine:
      image: ubuntu-2204:2024.01.1
    resource_class: large
    steps:
      - go/install:
          version: "1.21.4"
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - go/load-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
      - add_ssh_keys
      - go/mod-download
      - go/save-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          path: "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Run integration tests
          command: |
            make test-e2e-wasmd

  test_e2e_op:
    machine:
      image: ubuntu-2204:2024.01.1
    resource_class: large
    steps:
      - go/install:
          version: "1.21.4"
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - go/load-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
      - add_ssh_keys
      - go/mod-download
      - go/save-cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          path: "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Run integration tests
          command: |
            make test-e2e-op

  build_docker:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - checkout
      - add_ssh_keys
      - aws-ecr/build-image:
          push-image: false
          dockerfile: Dockerfile
          path: ./
          build-path: ./
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"
          repo: "$CIRCLE_PROJECT_REPONAME"
          extra-build-args: "--secret id=sshKey,src=/home/circleci/.ssh/$DEPLOY_KEY_NAME"
      - run:
          name: Save Docker image to export it to workspace
          command: |
            docker save $(docker image ls --format '{{.Repository}}:{{.Tag}}') > /tmp/finality-provider.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - finality-provider.tar

  push_docker:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image from workspace
          command: |
            docker load -i /tmp/finality-provider.tar
      - aws-ecr/ecr-login:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: "$AWS_REGION"
      - aws-ecr/push-image:
          registry-id: AWS_ECR_REGISTRY_ID
          region: "$AWS_REGION"
          repo: "$CIRCLE_PROJECT_REPONAME"
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"

workflows:
  CI:
    jobs:
      - check-mock-gen
      - build_lint_test
      - test_e2e_babylon
      - test_e2e_bcd
      - test_e2e_wasmd
      - test_e2e_op
      - build_docker:
          filters:
            tags:
              only: /.*/
      - push_docker:
          requires:
            - build_docker
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - main
                - dev
                - base/consumer-chain-support
