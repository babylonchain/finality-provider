// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: eots_verifier.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	EOTSVerifier_VerifyFinalitySig_FullMethodName = "/proto.EOTSVerifier/VerifyFinalitySig"
)

// EOTSVerifierClient is the client API for EOTSVerifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EOTSVerifierClient interface {
	// VerifyFinalitySig verifies that the finality signature is valid
	VerifyFinalitySig(ctx context.Context, in *VerifyFinalitySigRequest, opts ...grpc.CallOption) (*VerifyFinalitySigResponse, error)
}

type eOTSVerifierClient struct {
	cc grpc.ClientConnInterface
}

func NewEOTSVerifierClient(cc grpc.ClientConnInterface) EOTSVerifierClient {
	return &eOTSVerifierClient{cc}
}

func (c *eOTSVerifierClient) VerifyFinalitySig(ctx context.Context, in *VerifyFinalitySigRequest, opts ...grpc.CallOption) (*VerifyFinalitySigResponse, error) {
	out := new(VerifyFinalitySigResponse)
	err := c.cc.Invoke(ctx, EOTSVerifier_VerifyFinalitySig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EOTSVerifierServer is the server API for EOTSVerifier service.
// All implementations must embed UnimplementedEOTSVerifierServer
// for forward compatibility
type EOTSVerifierServer interface {
	// VerifyFinalitySig verifies that the finality signature is valid
	VerifyFinalitySig(context.Context, *VerifyFinalitySigRequest) (*VerifyFinalitySigResponse, error)
	mustEmbedUnimplementedEOTSVerifierServer()
}

// UnimplementedEOTSVerifierServer must be embedded to have forward compatible implementations.
type UnimplementedEOTSVerifierServer struct {
}

func (UnimplementedEOTSVerifierServer) VerifyFinalitySig(context.Context, *VerifyFinalitySigRequest) (*VerifyFinalitySigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyFinalitySig not implemented")
}
func (UnimplementedEOTSVerifierServer) mustEmbedUnimplementedEOTSVerifierServer() {}

// UnsafeEOTSVerifierServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EOTSVerifierServer will
// result in compilation errors.
type UnsafeEOTSVerifierServer interface {
	mustEmbedUnimplementedEOTSVerifierServer()
}

func RegisterEOTSVerifierServer(s grpc.ServiceRegistrar, srv EOTSVerifierServer) {
	s.RegisterService(&EOTSVerifier_ServiceDesc, srv)
}

func _EOTSVerifier_VerifyFinalitySig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyFinalitySigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOTSVerifierServer).VerifyFinalitySig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EOTSVerifier_VerifyFinalitySig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOTSVerifierServer).VerifyFinalitySig(ctx, req.(*VerifyFinalitySigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EOTSVerifier_ServiceDesc is the grpc.ServiceDesc for EOTSVerifier service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EOTSVerifier_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EOTSVerifier",
	HandlerType: (*EOTSVerifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyFinalitySig",
			Handler:    _EOTSVerifier_VerifyFinalitySig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eots_verifier.proto",
}
